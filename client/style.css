body, input, button {
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 20px;
}

h1 {
    text-align: center;
    margin: 20px 0;
}

form {
    background-color: #fff;
    max-width: 400px;
    margin: 20px auto;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.2);
}

label {
    display: block;
    margin-bottom: 5px;
}

input[type="text"], input[type="password"] {
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 3px;
    background-color: #f9f9f9;
}

input[type="submit"], button {
    background-color: #5e97d1;
    color: #fff;
    border: none;
    border-radius: 3px;
    padding: 10px 15px;
    cursor: pointer;
    margin-top: 10px;
    width: auto; /* Adjust the button width as per your design or keep it full width */
    display: inline-block;
}

input[type="submit"]:hover, button:hover {
    background-color: #4b81bf;
}

#greeting {
    text-align: center;
    margin-top: 30px;
    margin-bottom: 30px;
    font-size: 24px;
}

/* Added a new class for the button to customize its look */
.collect-love-button {
    padding: 15px 30px;
    font-size: 18px;
    text-transform: uppercase;
    letter-spacing: 1px;
    background-color: #ff4571;
    border: none;
    border-radius: 25px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    color: #fff;
    cursor: pointer;
    transition: background-color 0.3s;
}

.collect-love-button:hover {
    background-color: #ff6384;
}

.heart {
    position: fixed;
    width: 100px;
    height: 90px;
    animation: fall linear forwards;
    animation-duration: 5s; /* you can adjust the duration as desired */
    top: -90px; /* start position just above the viewport - adjust as needed */
    z-index: 10; /* ensures it is above other elements */
}

.heart::before, .heart::after {
    content: "";
    position: absolute;
    top: 0;
    width: 52px;
    height: 80px;
    border-radius: 50px 50px 0 0;
    background: #ff6347;
}

.heart::before {
    left: 50px;
    transform: rotate(-45deg);
    transform-origin: 0 100%;
}

.heart::after {
    left: 0;
    transform: rotate(45deg);
    transform-origin: 100% 100%;
}

@keyframes fall {
    to {
        top: 110vh; /* changes the final position to below the viewport */
    }
}

/* Theme toggle styles */
.theme-toggle-container {
    display: flex;
    align-items: center;
    justify-content: center; /* Center the toggle switch container */
    margin: 10px;
    font-size: 14px; /* Adjust the font size for better readability */
}

.theme-label {
    margin: 0 10px;
    color: #777;
    cursor: pointer;
}

.theme-label.light {
    color: #f1c40f;
}

.theme-label.dark {
    color: #34495e;
}

.theme-toggle-label input:checked + .theme-toggle-slider {
    background-color: #34495e; /* Color for the Dark theme */
}

.theme-toggle-label input:not(:checked) + .theme-toggle-slider {
    background-color: #f1c40f; /* Color for the Light theme */
}

/* Light theme with more prominent text colors for the active theme */
.light-theme .theme-label.light {
    color: #f39c12; /* A darker shade for the active Light theme label */
}

/* Dark theme with more prominent text colors for the active theme */
.dark-theme .theme-label.dark {
    color: #2c3e50; /* A darker shade for the active Dark theme label */
}

/* ... (the rest of the original CSS styles) ... */
